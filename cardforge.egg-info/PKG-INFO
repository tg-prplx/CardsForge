Metadata-Version: 2.4
Name: cardforge
Version: 0.1.0
Summary: Framework for rapid prototyping of Telegram card-collecting bots
Author: CardForge Authors
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Requires-Dist: aiogram>=3.4
Requires-Dist: sqlalchemy>=2.0
Requires-Dist: pydantic>=2.4
Requires-Dist: python-dotenv>=1.0
Requires-Dist: rich>=13.0
Provides-Extra: dev
Requires-Dist: pytest>=7.4; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21; extra == "dev"
Requires-Dist: faker>=19.0; extra == "dev"

# –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Å CardForge

CardForge —É–ø—Ä–æ—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–Ω—ã—Ö Telegram-–±–æ—Ç–æ–≤: –≤—ã –æ–ø–∏—Å—ã–≤–∞–µ—Ç–µ –∫–∞—Ç–∞–ª–æ–≥–∏ –≤ JSON, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç–µ —ç–∫–æ–Ω–æ–º–∏–∫—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –≥–æ—Ç–æ–≤—ã–µ aiogram-—Ä–æ—É—Ç–µ—Ä—ã, –∞–¥–º–∏–Ω-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –º–∏–Ω–∏-–∏–≥—Ä—ã.

---

## 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞
```bash
python -m venv .venv
.venv\Scripts\activate  # Windows
pip install -e .[dev]
```

---

## 2. –ë—ã—Å—Ç—Ä–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
```python
from pathlib import Path
from aiogram import Bot, Dispatcher
from cardforge import BotApp, CardForgeConfig
from cardforge.loaders import load_catalog_from_json
from cardforge.telegram import build_router
from cardforge.admin import build_admin_router

config = CardForgeConfig.from_env()
app = BotApp(config)
load_catalog_from_json(app, Path("catalog/cards.json"))

bot = Bot(app.config.bot_token)
dp = Dispatcher()
dp.include_router(build_router(app, default_pack="starters"))
dp.include_router(build_admin_router(app))
```

---

## 3. JSON-—Ñ–æ—Ä–º–∞—Ç –∫–∞—Ç–∞–ª–æ–≥–æ–≤

```json
{
  "currencies": [
    {"code": "coins", "name": "Coins"},
    {"code": "gems",  "name": "Gems"}
  ],
  "cards": [
    {
      "id": "warrior",
      "name": "–í–æ–∏–Ω",
      "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –≥–µ—Ä–æ–π –±–ª–∏–∂–Ω–µ–≥–æ –±–æ—è.",
      "rarity": "common",
      "maxCopies": 5,
      "weight": 0.6,
      "tags": ["starter"],
      "image": {
        "url": "https://example.com/warrior.png",
        "caption": "–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∏–Ω–∞"
      },
      "reward": {
        "currencies": {"coins": 5},
        "experience": 3
      }
    }
  ],
  "packs": [
    {
      "id": "starters",
      "name": "–°—Ç–∞—Ä—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä",
      "cards": ["warrior", "mage"],
      "allowDuplicates": true,
      "maxPerRoll": 1,
      "cardWeights": {
        "warrior": 1.0,
        "mage": 2.0
      },
      "rarityWeights": {
        "rare": 4.0,
        "common": 0.5
      }
    }
  ]
}
```

| –ü–æ–ª–µ                  | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                                               |
|-----------------------|------------------------------------------------------------------------------------------|
| `weight`              | –ë–∞–∑–æ–≤—ã–π –≤–µ—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1.0).                               |
| `cardWeights`         | –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Å–æ–≤ –≤–Ω—É—Ç—Ä–∏ –ø–∞–∫–∞ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º –∫–∞—Ä—Ç.                               |
| `rarityWeights`       | –í–µ—Å—ã –ø–æ —Ä–µ–¥–∫–æ—Å—Ç—è–º –≤–Ω—É—Ç—Ä–∏ –ø–∞–∫–∞.                                                           |
| `maxCopies`           | –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ø–∏–π —É –∏–≥—Ä–æ–∫–∞ (–¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ—Å–ª–µ –ª–∏–º–∏—Ç–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π). |
| `image.url/caption`   | –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–µ–¥–∏–∞-–¥–∞–Ω–Ω—ã–µ (–∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞).                                                |
| `image.local`         | –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—É, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –ø—Ä–æ–µ–∫—Ç –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏.              |

---

## 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã–ø–∞–¥–µ–Ω–∏—è

### 4.1 –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
```python
from cardforge.config import CardForgeConfig, DropConfig

config = CardForgeConfig(
    bot_token="TOKEN",
    drop=DropConfig(
        base_cooldown_seconds=1800,
        allow_duplicates=True,
        duplicate_penalty=0.25,
        max_cards_per_drop=2,
        rarity_weights={
            "legendary": 0.2,
            "epic": 0.8,
            "rare": 1.5,
            "common": 1.0,
        },
    ),
)
app = BotApp(config)
```

–ß–µ—Ä–µ–∑ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:
```
CARDFORGE_DROP_BASE_COOLDOWN=1800
CARDFORGE_DROP_ALLOW_DUPLICATES=true
CARDFORGE_DROP_DUPLICATE_PENALTY=0.25
CARDFORGE_DROP_MAX_CARDS=2
CARDFORGE_DROP_RARITY_WEIGHTS={"legendary":0.2,"epic":0.8,"rare":1.5,"common":1.0}
```

–í–µ—Å –∫–∞—Ä—Ç–æ—á–∫–∏ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º:
1. `pack.cardWeights`
2. `card.weight`
3. `pack.rarityWeights`
4. `config.drop.rarity_weights`
5. –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (1.0)

### 4.2 –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
CardForge –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥—É–±–ª–∏–∫–∞—Ç–æ–≤. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî `PenaltyDuplicateStrategy`, –∫–æ—Ç–æ—Ä–∞—è —É–º–Ω–æ–∂–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—É –∫–∞—Ä—Ç—ã –Ω–∞ `duplicate_penalty`. –ú–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å–≤–æ–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:

```python
from cardforge.domain import DustDuplicateStrategy
from cardforge.domain.economy import Currency

config = CardForgeConfig(bot_token="TOKEN")
app = BotApp(
    config,
    duplicate_strategy=DustDuplicateStrategy(currency="dust", amount=5),
)
app.currencies.currency(Currency(code="dust", name="Dust"))
```

–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:
- `PenaltyDuplicateStrategy` ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `duplicate_penalty`.
- `DustDuplicateStrategy(currency, amount)` ‚Äî –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥—É–±–ª–∏–∫–∞—Ç–∞ –≤ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–∞–ª—é—Ç—É.
–í—ã –º–æ–∂–µ—Ç–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–≤ `DuplicateStrategy`.

---

## 5. –ú–∏–Ω–∏-–∏–≥—Ä—ã

`MiniGameRegistry` –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã. –ö–æ–º–∞–Ω–¥–∞ `/games` –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä. –ö–æ–Ω—Ç–µ–∫—Å—Ç –º–∏–Ω–∏-–∏–≥—Ä—ã (`TelegramMiniGameContext`) –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç:
- `send_message(text)`
- `award_currency(currency, amount)`
- `spend_currency(currency, amount)`
- `grant_card(card_id, quantity)`
- `grant_experience(amount)`
- `get_profile()`
- `send_dice(emoji="üé≤")` –∏ `roll_dice(emoji="üé≤")` ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫—É–±–∏–∫–∞ –≤ Telegram –∏ —á—Ç–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.

```python
from cardforge.registry import MiniGame
from cardforge.telegram import TelegramMiniGameContext

async def coinflip(context: TelegramMiniGameContext):
    await context.send_message("ü™ô –ü–æ–¥–±—Ä–∞—Å—ã–≤–∞—é –º–æ–Ω–µ—Ç–∫—É...")
    if random.random() < 0.5:
        await context.award_currency("coins", 10)
        await context.grant_experience(5)
        await context.send_message("–û—Ä—ë–ª! –¢—ã –ø–æ–ª—É—á–∏–ª –Ω–∞–≥—Ä–∞–¥—ã.")
    else:
        await context.send_message("–†–µ—à–∫–∞! –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")

app.mini_games.register(
    MiniGame(
        game_id="coinflip",
        name="–ú–æ–Ω–µ—Ç–∫–∞",
        description="–ò—Å–ø—ã—Ç–∞–π —É–¥–∞—á—É –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–π –º–æ–Ω–µ—Ç—ã.",
        command="coinflip",
        aliases=("cf",),
        handler=coinflip,
    )
)
```

---

## 6. –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥
`AdminCommandConfig` –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤:

```python
config = CardForgeConfig.from_env()
config.admin.commands = config.admin.commands.__class__(
    ban="block",
    unban="unblock",
    grant_card="giftcard",
    grant_currency="boost",
)
app = BotApp(config)
```

–ö–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (`CARDFORGE_ADMIN_CMD_*`).

---

## 7. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞

| –£—Ç–∏–ª–∏—Ç–∞                    | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                           |
|----------------------------|------------------------------------------------------|
| `cardforge-sim`            | Monte-Carlo —Å–∏–º—É–ª—è—Ü–∏—è –≤—ã–ø–∞–¥–µ–Ω–∏–π –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —ç–∫–æ–Ω–æ–º–∏–∫–∏ |
| `cardforge-check`          | –ß–µ–∫-–ª–∏—Å—Ç –±–∞–ª–∞–Ω—Å–∞ (–ø—É—Å—Ç—ã–µ –ø–∞–∫–∏, –ø–µ—Ä–µ–∫–æ—Å –æ–ø—ã—Ç–∞ –∏ —Ç.–¥.) |
| `cardforge-studio`         | –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –º–∞—Å—Ç–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ |
| `cardforge-validate --catalog catalog/cards.json` | –í–∞–ª–∏–¥–∞—Ç–æ—Ä JSON –∫–∞—Ç–∞–ª–æ–≥–∞ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π |
| `cardforge-validate --module examples.basic_bot` | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–æ—Ç–∞ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ |
| `pytest`                   | –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (–ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≥–æ—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä –ø—Ä–∏–º–µ—Ä–æ–≤)  |
| `cardforge.testing`        | –§–∞–±—Ä–∏–∫–∏ –∏ —Ç–µ—Å—Ç-–∫–ª–∏–µ–Ω—Ç –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤                  |

–ü—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–∞:
```python
async def test_weighted_drop_prefers_rare(app):
    outcome = await app.inventory_service.drop_from_pack(1, "weighted")
    assert outcome.cards[0].rarity == Rarity.RARE
```

---

## 8. –ü–æ–ª–µ–∑–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

| –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è                           | –û–ø–∏—Å–∞–Ω–∏–µ                                                     |
|--------------------------------------|--------------------------------------------------------------|
| `CARDFORGE_BOT_TOKEN`                | –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞                                          |
| `CARDFORGE_STORAGE_BACKEND`         | `memory` \| `sqlalchemy`                                     |
| `CARDFORGE_STORAGE_DSN`             | DSN –¥–ª—è SQLAlchemy                                           |
| `CARDFORGE_ADMIN_IDS`               | –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é                              |
| `CARDFORGE_ADMIN_CMD_*`             | –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ `/ban`, `/unban`, `/grantcard`, `/grantcurrency` |
| `CARDFORGE_DROP_*`                  | –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥—Ä–æ–ø–∞ (–∫—É–ª–¥–∞—É–Ω, –¥—É–±–ª–∏–∫–∞—Ç—ã, –≤–µ—Å–∞)                   |
| `CARDFORGE_RNG_SEED`                | –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∏–¥ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º—ã—Ö –≤—ã–ø–∞–¥–µ–Ω–∏–π              |

---

## 9. –î–∞–ª—å–Ω–µ–π—à–∏–µ —à–∞–≥–∏
1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ –∫–∞—Ä—Ç –≤ JSON –∏–ª–∏ –≤ –∫–æ–¥–µ.
2. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –≤–µ—Å–∞ –≤—ã–ø–∞–¥–µ–Ω–∏–π –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤.
3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç—ã `build_router` –∏ `build_admin_router`.
4. –î–æ–±–∞–≤—å—Ç–µ –º–∏–Ω–∏-–∏–≥—Ä—ã –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.
5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ `pytest` –∏ `cardforge-validate`, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ –¥–∞–Ω–Ω—ã—Ö.

–ì–æ—Ç–æ–≤–æ: —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –≥–∏–±–∫–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –±–æ—Ç–∞. –£–¥–∞—á–∏!
